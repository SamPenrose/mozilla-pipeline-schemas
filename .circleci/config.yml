# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

version: 2.1

executors:
  edge-validator:
    docker:
      - image: mozilla/edge-validator:v1.4.0

jobs:
  test:
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t mps .
      - run:
          name: Test Code
          command: docker run mps
      - run:
          name: Verify that all generated schemas are committed
          command: docker run -w /app mps scripts/assert-consistent-schemas
      - run:
          name: Verify set version in telemetry namespace is correct
          command: docker run -w /app mps scripts/assert-telemetry-version
  integrate:
    executor: edge-validator
    steps:
      - checkout
      - run: &checkout_upstream
          name: Checkout upstream
          command: |
            git remote add upstream git@github.com:mozilla-services/mozilla-pipeline-schemas.git
            git fetch --all
      - setup_remote_docker
      - restore_cache:
          key: mps-integration-data-v2
      - run: &run_comparison
          name: Run a comparison report
          environment:
            SOURCE_DATA_BUCKET: telemetry-parquet
            SOURCE_DATA_PREFIX: sanitized-landfill-sample/v3
          command: |
            # Get the revisions for comparison. This will compare the tip of
            # the PR against the upstream mozilla:master.
            head_short_id=$(git rev-parse --short HEAD)
            upstream_short_id=$(git rev-parse --short upstream/master)

            # The `checkout` step defaults to $HOME/project (/app/project).
            # Replace the container's submodule with the current state of this repo.
            cd .. && rm -r mozilla-pipeline-schemas && mv project mozilla-pipeline-schemas

            # Run the comparison report and store the artifacts for future viewing.
            pipenv run \
              python integration.py sync compare \
                --report-path test-reports \
                $upstream_short_id $head_short_id
      - store_artifacts: &store_artifacts
          path: /app/test-reports
          destination: /app/test-results
      - persist_to_workspace:
          root: /app
          paths:
            - test-reports
      - save_cache: &save_cache
          paths:
            - ~/resources
          key: mps-integration-data-v2-{{ epoch }}
  integrate-clean:
    executor: edge-validator
    steps:
      - checkout
      - run:
          <<: *checkout_upstream
      - setup_remote_docker
      # We skip the restore_cache step so that the most recent cache is pristine once every day.
      - run:
          <<: *run_comparison
      - store_artifacts:
          <<: *store_artifacts
      - save_cache:
          <<: *save_cache
  post-artifacts:
    docker:
      - image: circleci/node:8.10.0
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - run: npm i circle-github-bot
      - run: HOME=/app/test-report .circleci/post-artifact.js

workflows:
    version: 2
    build:
      jobs:
        - test:
            filters:
              branches:
                # This branch is only used for the .github/push-to-trigger-integration script
                ignore: trigger-integration
        - integrate:
            filters:
              branches:
                # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
                ignore: /pull\/[0-9]+/
        - post-artifacts:
            requires:
              - integrate
            filters:
              branches:
                # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
                ignore: /pull\/[0-9]+/
    nightly:
      jobs:
        - integrate-clean
      triggers:
        - schedule:
            # Run integration tests a little after midnight Pacific every day to pick up
            # the latest data and ensure a clean cache for PRs the following day.
            cron: "33 8 * * *"
            filters:
              branches:
                only:
                  - master
