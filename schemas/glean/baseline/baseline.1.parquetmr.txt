message baseline {
  required group metadata {
    optional binary EnvVersion (UTF8);
    optional binary geoSubdivision1 (UTF8);
    optional binary geoSubdivision2 (UTF8);
    optional int32 Severity;
    required binary Host (UTF8);
    required binary Hostname (UTF8);
    required binary Logger (UTF8);
    required binary Type (UTF8);
    required binary docType (UTF8);
    required binary documentId (UTF8);
    required binary geoCity (UTF8);
    required binary geoCountry (UTF8);
    required double docVersion;
    required fixed_len_byte_array(16) Uuid;
    required int32 Pid;
    required int64 Timestamp;
  }
  required group ping_info {
    required binary ping_type (UTF8);
    required binary app_build (UTF8);
    required binary telemetry_sdk_build (UTF8);
    required binary client_id (UTF8);
    required int32 seq;
    required binary start_time (UTF8);
    required binary end_time
  }
  optional group metrics {
    optional group boolean (MAP) {
      repeated group key_value {
        required binary key (UTF8);
        optional boolean value;
      }
    }
    optional group string (MAP) {
      repeated group key_value {
        required binary key (UTF8);
        optional binary value (UTF8);
      }
    }
    optional group number (MAP) {
      repeated group key_value {
        required binary key (UTF8);
        optional double value;
      }
    }
    optional group string_list (MAP) {
      repeated group key_value {
        required binary key (UTF8);
        optional group value (LIST) {
          repeated group list {
            optional binary element (UTF8);
          }
        }
      }
    }
    optional group enumeration (MAP) {
      repeated group key_value {
        required binary key (UTF8);
        optional binary value (UTF8);
      }
    }
    optional group counter (MAP) {
      repeated group key_value {
        required binary key (UTF8);
        optional int64 value;
      }
    }
    optional group timespan (MAP) {
      repeated group key_value {
        required binary key (UTF8);
        optional group value {
          required int64 value;
          required binary time_unit (UTF8);
        }
      }
    }
    optional group timing_distribution (MAP) {
      repeated group key_value {
        required binary key (UTF8);
        optional group value {
          optional group range (TUPLE) {
  required double lo;
  required double hi;
}
optional inte64 bucket_count;
optional binary histogram_type (UTF8);
optional group values (MAP) {
  repeated group key_value {
    required binary key (UTF8);
    optional int64 value;
  }
}
optional int64 underflow;
optional int64 overflow;

          required binary time_unit (UTF8);
        }
      }
    }
    optional group datetime (MAP) {
      repeated group key_value {
        required binary key (UTF8);
        optional group value {
          optional binary value (UTF8)
          optional binary time_unit (UTF8);
        }
      }
    }
    optional group use_counter (MAP) {
      repeated group key_value {
        required binary key (UTF8);
        optional group value {
          optional binary values (MAP) {
            repeated group key_value {
              required binary key (UTF8);
              optional int64 value;
            }
          }
          optional group denominator {
            optional binary name (UTF8);
            optional int64 value;
          }
        }
      }
    }
    optional group usage (MAP) {
      repeated group key_value {
        required binary key (UTF8);
        optional boolean value;
      }
    }
    optional group rate (MAP) {
      repeated group key_value {
        required binary key (UTF8);
        optional int64 value;
      }
    }
    optional group uuid (MAP) {
      repeated group key_value {
        required binary key (UTF8);
        optional binary value (UTF8);
      }
    }
  }
  optional group events (MAP) {
    repeated group key_value {
      required binary key (UTF8);
      optional group value {
        required int64 timestamp;
        required binary object (UTF8);
        optional binary value (UTF8);
        optional group extra (MAP) {
          repeated group key_value {
            required binary key (UTF8);
            optional binary value (UTF8);
          }
        }
      }
    }
  }

